// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Members {
  id          String      @id @default(uuid())
  name        String
  roll_number String      @unique
  wing        Wing
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  codeforces  Codeforces?
  leetcode    Leetcode?
  game_dev    GameDev?
  foss        FOSS?
  web_dev     WebDev?

  @@index([roll_number])
}

model Codeforces {
  id        Int     @id @default(autoincrement())
  handle    String  @unique
  // rating           Int
  // num_participants Int
  member    Members @relation(fields: [member_id], references: [id], onDelete: Cascade)
  member_id String  @unique
}

model Leetcode {
  id        Int     @id @default(autoincrement())
  handle    String  @unique
  // rank      Int
  // solved    Int
  member    Members @relation(fields: [member_id], references: [id], onDelete: Cascade)
  member_id String  @unique
}

model GameDev {
  id        Int     @id @default(autoincrement())
  role      Role
  member    Members @relation(fields: [member_id], references: [id], onDelete: Cascade)
  member_id String  @unique
}

model FOSS {
  id           Int     @id @default(autoincrement())
  github_uname String  @unique
  member       Members @relation(fields: [member_id], references: [id], onDelete: Cascade)
  member_id    String  @unique
}

model WebDev {
  id           Int     @id @default(autoincrement())
  github_uname String  @unique
  member       Members @relation(fields: [member_id], references: [id], onDelete: Cascade)
  member_id    String  @unique
}

enum Wing {
  FOSS
  GAME_DEV
  CP
  NETWORKING
  CYBERSECURITY
  WEB_DEV
}

enum Role {
  DEVELOPER
  ASSET_DES
  MUSIC_COMP
  STORY_WRITING
  ENV_DES
}

model CodeforcesLeaderBoard {
  id              String   @id @default(uuid())
  name            String
  rollNumber      String   @unique
  userHandle      String   @unique
  rating          Int
  contests        Int
  last_contest_id Int
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@index([rollNumber])
}

model LeetCodeLeaderBoard {
  id         String   @id @default(uuid())
  name       String
  rollNumber String   @unique
  userHandle String   @unique
  ranking    Int
  stars      Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([rollNumber])
}

enum Month {
  January
  February
  March
  April
  May
  June
  July
  August
  September
  October
  November
  December
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String
  start_month Month
  url         String
  image_url   String   @default("")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Project {
  id          String   @id @default(uuid())
  title       String
  description String
  start_month Month
  url         String
  image_url   String   @default("")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Achievement {
  id          String   @id @default(uuid())
  title       String
  description String
  start_month Month
  url         String
  image_url   String   @default("")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Otp {
  id         String   @id @default(uuid())
  email      String   @unique
  otp        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
